{"version":3,"sources":["src/components/TourGuideZoneByPosition.tsx","src/utilities.ts","src/components/AnimatedPath.tsx","src/components/SvgMask.tsx","src/components/Modal.tsx","src/components/TourGuideProvider.tsx","src/hooks/useIsMounted.ts","src/hooks/useTourGuideController.ts","App.tsx","src/components/style.ts","src/index.ts","src/components/TourGuideContext.ts","src/components/ConnectedStep.tsx","src/components/Step.tsx","src/components/Wrapper.tsx","src/components/TourGuideZone.tsx","src/components/Button.tsx","src/components/Tooltip.tsx"],"names":["TourGuideZoneByPosition","isTourGuide","zone","width","height","top","left","right","bottom","shape","containerStyle","keepTooltipPosition","tooltipBottomOffset","borderRadiusObject","text","pointerEvents","style","StyleSheet","absoluteFillObject","position","getPrevStep","steps","step","Object","values","filter","_step","order","reduce","a","b","getNextStep","headPath","cleanPath","memoize","path","replace","trim","getCanvasPath","canvasPath","match","getBorderRadiusOrDefault","borderRadius","defaultRadius","defaultSvgPath","size","radius","borderRadiusTopRight","topRight","borderRadiusTopLeft","topLeft","borderRadiusBottomRight","bottomRight","borderRadiusBottomLeft","bottomLeft","x","y","circleSvgPath","Math","round","max","join","sizeOffset","maskOffset","positionOffset","getMaxSegmentLength","getSplitPathSliceOne","splitPath","splitPathString","length","slice","getInterpolator","previousPath","options","maxSegmentLength","optionsKeep","single","getDefaultInterpolate","interpolate","getCircleInterpolator","toCircle","separate","AnimatedSvgPath","Platform","select","default","Animated","createAnimatedComponent","Path","web","screenDimensions","Dimensions","get","FIRST_PATH","IS_WEB","OS","SvgMask","props","mask","React","createRef","getPath","state","animation","currentStep","to","interpolator","clamp","_value","svgMaskPathMorph","animationListener","d","rafID","requestAnimationFrame","current","setNativeProps","_touchableNode","setAttribute","animate","animations","timing","toValue","duration","animationDuration","easing","useNativeDriver","opacity","push","parallel","stopTogether","start","result","finished","setState","setValue","handleLayout","nativeEvent","layout","canvasSize","Value","listenerID","addListener","prevProps","this","removeListener","cancelAnimationFrame","dismissOnPress","stop","Wrapper","TouchableWithoutFeedback","View","onLayout","onPress","undefined","ref","fill","backdropColor","strokeWidth","fillRule","Component","defaultProps","Easing","linear","Modal","tooltip","containerVisible","tooltipTranslateY","handleLayoutChange","handleNext","next","handlePrev","prev","handleStop","reset","renderMask","styles","overlayContainer","visible","__TEST__","Promise","resolve","setLayout","async","obj","measure","androidStatusBarVisible","StatusBar","currentHeight","center","relativeToLeft","relativeToTop","relativeToBottom","abs","relativeToRight","horizontalPosition","maxWidth","verticalPosition","MARGIN","translateAnim","delay","opacityAnim","floor","_animateMove","then","TooltipComponent","tooltipComponent","key","tooltipStyle","transform","translateY","isFirstStep","isLastStep","labels","contentVisible","absoluteFill","backgroundColor","container","renderTooltip","elastic","Tooltip","useMemo","useEffect","useState","useRef","TourGuideProvider","children","wrapperStyle","verticalOffset","startAtMount","setVisible","updateCurrentStep","setSteps","canStart","setCanStart","startTries","mounted","isMounted","useIsMounted","eventEmitter","mitt","modal","emit","moveToCurrentStep","entries","target","isNaN","animateMove","OFFSET_WIDTH","setCurrentStep","getFirstStep","utils","getLastStep","fromStep","TourGuideContext","Provider","value","registerStep","previousSteps","name","unregisterStep","stepName","val","getCurrentStep","create","flex","useTourGuideController","AppContent","iconProps","color","on","console","log","off","title","middleView","button","buttonText","source","uri","profilePhoto","row","alignItems","paddingTop","fontSize","textAlign","marginVertical","paddingVertical","paddingHorizontal","margin","padding","flexDirection","justifyContent","activeSwitchContainer","marginBottom","App","zIndex","overflow","paddingBottom","tooltipText","tooltipContainer","bottomBar","marginTop","ConnectedStep","active","register","unregister","wrapper","context","warn","reject","_ox","_oy","copilot","Step","TourGuideZone","Button","rest","Text","testID","TouchableOpacity","skip","previous","finish"],"mappings":"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","file":"static/js/app.9e8c794a.chunk.js","sourcesContent":["import * as React from 'react'\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { TourGuideZone } from './TourGuideZone'\n\nexport interface TourGuideZoneByPositionProps {\n  zone: number\n  isTourGuide?: boolean\n  top?: number | string\n  left?: number | string\n  right?: number | string\n  bottom?: number | string\n  width?: number | string\n  height?: number | string\n  shape?: Shape\n  borderRadiusObject?: BorderRadiusObject\n  containerStyle?: StyleProp<ViewStyle>\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  text?: string\n}\n\nexport const TourGuideZoneByPosition = ({\n  isTourGuide,\n  zone,\n  width,\n  height,\n  top,\n  left,\n  right,\n  bottom,\n  shape,\n  containerStyle,\n  keepTooltipPosition,\n  tooltipBottomOffset,\n  borderRadiusObject,\n  text,\n}: TourGuideZoneByPositionProps) => {\n  if (!isTourGuide) {\n    return null\n  }\n\n  return (\n    <View\n      pointerEvents='none'\n      style={[StyleSheet.absoluteFillObject, containerStyle]}\n    >\n      <TourGuideZone\n        isTourGuide\n        {...{\n          zone,\n          shape,\n          keepTooltipPosition,\n          tooltipBottomOffset,\n          borderRadiusObject,\n          text,\n        }}\n        style={{\n          position: 'absolute',\n          height,\n          width,\n          top,\n          right,\n          bottom,\n          left,\n        }}\n      />\n    </View>\n  )\n}\n","// @ts-ignore\nimport { interpolate, separate, splitPathString, toCircle } from 'flubber'\nimport clamp from 'lodash.clamp'\nimport memoize from 'memoize-one'\nimport {\n  BorderRadiusObject,\n  IStep,\n  Shape,\n  Steps,\n  SVGMaskPathMorphParam,\n  SvgPath,\n  ValueXY,\n} from './types'\n\nexport const getFirstStep = (steps: Steps): IStep | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: IStep | null, b) => (!a || a.order > b.order ? b : a),\n    null,\n  )\n\nexport const getLastStep = (steps: Steps): IStep | null =>\n  steps &&\n  Object.values(steps).reduce(\n    (a: IStep | null, b) => (!a || a.order < b.order ? b : a),\n    null,\n  )\n\nexport const getStepNumber = (steps: Steps, step?: IStep): number | undefined =>\n  step &&\n  Object.values(steps).filter((_step) => _step.order <= step.order).length\n\nexport const getPrevStep = (steps: Steps, step?: IStep): IStep | null =>\n  Object.values(steps)\n    .filter((_step) => _step.order < step!.order)\n    .reduce((a: IStep | null, b) => (!a || a.order < b.order ? b : a), null)\n\nexport const getNextStep = (\n  steps: Steps,\n  step?: IStep,\n): IStep | null | undefined =>\n  Object.values(steps)\n    .filter((_step) => _step.order > step!.order)\n    .reduce((a: IStep | null, b) => (!a || a.order > b.order ? b : a), null) ||\n  step\n\nconst headPath = /^M0,0H\\d*\\.?\\d*V\\d*\\.?\\d*H0V0Z/\nconst cleanPath = memoize((path: string) => path.replace(headPath, '').trim())\nconst getCanvasPath = memoize((path: string) => {\n  const canvasPath = path.match(headPath)\n  if (canvasPath) {\n    return canvasPath[0]\n  }\n  return ''\n})\n\nconst getBorderRadiusOrDefault = (\n  borderRadius?: number,\n  defaultRadius: number = 0,\n) => (borderRadius || borderRadius === 0 ? borderRadius : defaultRadius)\n\nexport const defaultSvgPath = ({\n  size,\n  position,\n  borderRadius: radius,\n  borderRadiusObject,\n}: {\n  size: ValueXY\n  position: ValueXY\n  borderRadius: number\n  borderRadiusObject?: BorderRadiusObject\n}): SvgPath => {\n  if (radius || borderRadiusObject) {\n    const borderRadiusTopRight = getBorderRadiusOrDefault(\n      borderRadiusObject?.topRight,\n      radius,\n    )\n    const borderRadiusTopLeft = getBorderRadiusOrDefault(\n      borderRadiusObject?.topLeft,\n      radius,\n    )\n    const borderRadiusBottomRight = getBorderRadiusOrDefault(\n      borderRadiusObject?.bottomRight,\n      radius,\n    )\n    const borderRadiusBottomLeft = getBorderRadiusOrDefault(\n      borderRadiusObject?.bottomLeft,\n      radius,\n    )\n\n    return `M${position.x},${position.y}H${\n      position.x + size.x\n    } a${borderRadiusTopRight},${borderRadiusTopRight} 0 0 1 ${borderRadiusTopRight},${borderRadiusTopRight}V${\n      position.y + size.y - borderRadiusTopRight\n    } a${borderRadiusBottomRight},${borderRadiusBottomRight} 0 0 1 -${borderRadiusBottomRight},${borderRadiusBottomRight}H${\n      position.x\n    } a${borderRadiusBottomLeft},${borderRadiusBottomLeft} 0 0 1 -${borderRadiusBottomLeft},-${borderRadiusBottomLeft}V${\n      position.y +\n      (borderRadiusBottomLeft > borderRadiusTopLeft\n        ? borderRadiusTopLeft\n        : borderRadiusBottomLeft)\n    } a${borderRadiusTopLeft},${borderRadiusTopLeft} 0 0 1 ${borderRadiusTopLeft},-${borderRadiusTopLeft}Z`\n  }\n  return `M${position.x},${position.y}H${position.x + size.x}V${\n    position.y + size.y\n  }H${position.x}V${position.y}Z`\n}\n\nexport const circleSvgPath = ({\n  size,\n  position,\n}: {\n  size: ValueXY\n  position: ValueXY\n}): SvgPath => {\n  const radius = Math.round(Math.max(size.x, size.y) / 2)\n  return [\n    `M${position.x - size.x / 8},${position.y + size.y / 2}`,\n    `a${radius} ${radius} 0 1 0 ${radius * 2} 0 ${radius} ${radius} 0 1 0-${\n      radius * 2\n    } 0`,\n  ].join('')\n}\n\nconst sizeOffset = memoize((size: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: size.x + maskOffset,\n        y: size.y + maskOffset,\n      }\n    : size,\n)\n\nconst positionOffset = memoize((position: ValueXY, maskOffset: number = 0) =>\n  maskOffset\n    ? {\n        x: position.x - maskOffset / 2,\n        y: position.y - maskOffset / 2,\n      }\n    : position,\n)\n\nconst getMaxSegmentLength = memoize((shape: Shape) => {\n  switch (shape) {\n    case 'circle':\n    case 'circle_and_keep':\n      return 7\n    case 'rectangle_and_keep':\n      return 25\n\n    default:\n      return 15\n  }\n})\n\nconst getSplitPathSliceOne = memoize((path: SvgPath) => {\n  const splitPath = splitPathString(path)\n  return splitPath.length > 1 ? splitPath.slice(1).join('') : path\n})\n\nconst getInterpolator = memoize(\n  (\n    previousPath: string,\n    shape: Shape,\n    position: ValueXY,\n    size: ValueXY,\n    maskOffset: number = 0,\n    borderRadius: number = 0,\n    borderRadiusObject?: BorderRadiusObject,\n  ) => {\n    const options = {\n      maxSegmentLength: getMaxSegmentLength(shape),\n    }\n    const optionsKeep = { single: true }\n    const getDefaultInterpolate = () =>\n      interpolate(\n        previousPath,\n        defaultSvgPath({\n          size: sizeOffset(size, maskOffset),\n          position: positionOffset(position, maskOffset),\n          borderRadius,\n          borderRadiusObject,\n        }),\n        options,\n      )\n    const getCircleInterpolator = () =>\n      toCircle(\n        previousPath,\n        position.x + size.x / 2,\n        position.y + size.y / 2,\n        Math.max(size.x, size.y) / 2 + maskOffset,\n        options,\n      )\n\n    switch (shape) {\n      case 'circle':\n        return getCircleInterpolator()\n      case 'rectangle':\n        return getDefaultInterpolate()\n      case 'circle_and_keep': {\n        const path = getSplitPathSliceOne(previousPath)\n        return separate(\n          previousPath,\n          [\n            path,\n            circleSvgPath({ size: sizeOffset(size, maskOffset), position }),\n          ],\n          optionsKeep,\n        )\n      }\n\n      case 'rectangle_and_keep': {\n        const path = getSplitPathSliceOne(previousPath)\n        return separate(\n          previousPath,\n          [\n            path,\n            defaultSvgPath({\n              size: sizeOffset(size, maskOffset),\n              position: positionOffset(position, maskOffset),\n              borderRadius,\n              borderRadiusObject,\n            }),\n          ],\n          optionsKeep,\n        )\n      }\n      default:\n        return getDefaultInterpolate()\n    }\n  },\n)\n\nexport const svgMaskPathMorph = ({\n  previousPath,\n  animation,\n  to: { position, size, shape, maskOffset, borderRadius, borderRadiusObject },\n}: SVGMaskPathMorphParam) => {\n  const interpolator = getInterpolator(\n    cleanPath(previousPath),\n    shape!,\n    position,\n    size,\n    maskOffset,\n    borderRadius,\n    borderRadiusObject,\n  )\n\n  return `${getCanvasPath(previousPath)}${interpolator(\n    clamp(animation._value, 0, 1),\n  )}`\n}\n","import * as React from 'react'\nimport { Animated, Platform } from 'react-native'\nimport { Path, PathProps } from 'react-native-svg'\n\nexport const AnimatedSvgPath: React.ComponentType<\n  PathProps & { ref: any }\n> = Platform.select({\n  default: Animated.createAnimatedComponent(Path),\n  web: Path,\n})\n","import React, { Component } from 'react'\nimport {\n  Animated,\n  Dimensions,\n  Easing,\n  LayoutChangeEvent,\n  Platform,\n  StyleProp,\n  View,\n  ViewStyle,\n  TouchableWithoutFeedback,\n} from 'react-native'\nimport Svg, { PathProps } from 'react-native-svg'\nimport { IStep, ValueXY } from '../types'\nimport { svgMaskPathMorph } from '../utilities'\nimport { AnimatedSvgPath } from './AnimatedPath'\n\nconst screenDimensions = Dimensions.get('screen')\n\ninterface Props {\n  size: ValueXY\n  position: ValueXY\n  style: StyleProp<ViewStyle>\n  animationDuration?: number\n  backdropColor: string\n  dismissOnPress: boolean\n  maskOffset?: number\n  borderRadius?: number\n  currentStep?: IStep\n  easing?(value: number): number\n}\n\ninterface State {\n  size: ValueXY\n  position: ValueXY\n  opacity: Animated.Value\n  animation: Animated.Value\n  canvasSize: ValueXY\n  previousPath: string\n}\n\nconst FIRST_PATH = `M0,0H${screenDimensions.width}V${\n  screenDimensions.height\n}H0V0ZM${screenDimensions.width / 2},${\n  screenDimensions.height / 2\n} h 1 v 1 h -1 Z`\n\nconst IS_WEB = Platform.OS !== 'web'\n\nexport class SvgMask extends Component<Props, State> {\n  static defaultProps = {\n    easing: Easing.linear,\n    size: { x: 0, y: 0 },\n    position: { x: 0, y: 0 },\n    maskOffset: 0,\n  }\n\n  listenerID: string\n  rafID: number\n  mask: React.RefObject<PathProps> = React.createRef()\n\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      canvasSize: {\n        x: screenDimensions.width,\n        y: screenDimensions.height,\n      },\n      size: props.size,\n      position: props.position,\n      opacity: new Animated.Value(0),\n      animation: new Animated.Value(0),\n      previousPath: FIRST_PATH,\n    }\n\n    this.listenerID = this.state.animation.addListener(this.animationListener)\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (\n      prevProps.position !== this.props.position ||\n      prevProps.size !== this.props.size\n    ) {\n      this.animate()\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.listenerID) {\n      this.state.animation.removeListener(this.listenerID)\n    }\n    if (this.rafID) {\n      cancelAnimationFrame(this.rafID)\n    }\n  }\n\n  getPath = () => {\n    const { previousPath, animation } = this.state\n    const { size, position, currentStep, maskOffset, borderRadius } = this.props\n\n    return svgMaskPathMorph({\n      animation: animation as any,\n      previousPath,\n      to: {\n        position,\n        size,\n        shape: currentStep?.shape,\n        maskOffset: currentStep?.maskOffset || maskOffset,\n        borderRadius: currentStep?.borderRadius || borderRadius,\n        borderRadiusObject: currentStep?.borderRadiusObject,\n      },\n    })\n  }\n\n  animationListener = () => {\n    const d = this.getPath()\n    this.rafID = requestAnimationFrame(() => {\n      if (this.mask && this.mask.current) {\n        if (IS_WEB) {\n          // @ts-ignore\n          this.mask.current.setNativeProps({ d })\n        } else {\n          // @ts-ignore\n          this.mask.current._touchableNode.setAttribute('d', d)\n        }\n      }\n    })\n  }\n\n  animate = () => {\n    const animations = [\n      Animated.timing(this.state.animation, {\n        toValue: 1,\n        duration: this.props.animationDuration,\n        easing: this.props.easing,\n        useNativeDriver: false,\n      }),\n    ]\n    // @ts-ignore\n    if (this.state.opacity._value !== 1) {\n      animations.push(\n        Animated.timing(this.state.opacity, {\n          toValue: 1,\n          duration: this.props.animationDuration,\n          easing: this.props.easing,\n          useNativeDriver: true,\n        }),\n      )\n    }\n    Animated.parallel(animations, { stopTogether: false }).start((result) => {\n      if (result.finished) {\n        this.setState({ previousPath: this.getPath() }, () => {\n          // @ts-ignore\n          if (this.state.animation._value === 1) {\n            this.state.animation.setValue(0)\n          }\n        })\n      }\n    })\n  }\n\n  handleLayout = ({\n    nativeEvent: {\n      layout: { width, height },\n    },\n  }: LayoutChangeEvent) => {\n    this.setState({\n      canvasSize: {\n        x: width,\n        y: height,\n      },\n    })\n  }\n\n  render() {\n    if (!this.state.canvasSize) {\n      return null\n    }\n    const { dismissOnPress, stop }:any = this.props\n    const Wrapper:any = dismissOnPress ? TouchableWithoutFeedback : View\n\n    return (\n      <Wrapper\n        style={this.props.style}\n        onLayout={this.handleLayout}\n        pointerEvents='none'\n        onPress={dismissOnPress ? stop : undefined}\n      >\n        <Svg\n          pointerEvents='none'\n          width={this.state.canvasSize.x}\n          height={this.state.canvasSize.y}\n        >\n          <AnimatedSvgPath\n            ref={this.mask}\n            fill={this.props.backdropColor}\n            strokeWidth={0}\n            fillRule='evenodd'\n            d={FIRST_PATH}\n            opacity={this.state.opacity as any}\n          />\n        </Svg>\n      </Wrapper>\n    )\n  }\n}\n","import * as React from 'react'\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  Platform,\n  StatusBar,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native'\nimport { BorderRadiusObject, IStep, Labels, ValueXY } from '../types'\nimport styles, { MARGIN } from './style'\nimport { SvgMask } from './SvgMask'\nimport { Tooltip, TooltipProps } from './Tooltip'\n\ndeclare var __TEST__: boolean\n\nexport interface ModalProps {\n  ref: any\n  currentStep?: IStep\n  visible?: boolean\n  isFirstStep: boolean\n  isLastStep: boolean\n  animationDuration?: number\n  tooltipComponent: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  borderRadiusObject?: BorderRadiusObject\n  androidStatusBarVisible: boolean\n  backdropColor: string\n  labels: Labels\n  dismissOnPress: boolean\n  easing(value: number): number\n  stop(): void\n  next(): void\n  prev(): void\n}\n\ninterface Layout {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\ninterface State {\n  tooltip: object\n  notAnimated?: boolean\n  containerVisible: boolean\n  layout?: Layout\n  size?: ValueXY\n  position?: ValueXY\n  tooltipTranslateY: Animated.Value\n  opacity: Animated.Value\n}\n\ninterface Move {\n  top: number\n  left: number\n  width: number\n  height: number\n}\n\nexport class Modal extends React.Component<ModalProps, State> {\n  static defaultProps = {\n    easing: Easing.elastic(0.7),\n    animationDuration: 400,\n    tooltipComponent: Tooltip as any,\n    tooltipStyle: {},\n    androidStatusBarVisible: false,\n    backdropColor: 'rgba(0, 0, 0, 0.4)',\n    labels: {},\n  }\n\n  layout?: Layout = {\n    x: 0,\n    y: 0,\n    width: 0,\n    height: 0,\n  }\n\n  state = {\n    tooltip: {},\n    containerVisible: false,\n    tooltipTranslateY: new Animated.Value(400),\n    opacity: new Animated.Value(0),\n    layout: undefined,\n    size: undefined,\n    position: undefined,\n  }\n\n  constructor(props: ModalProps) {\n    super(props)\n  }\n\n  componentDidUpdate(prevProps: ModalProps) {\n    if (prevProps.visible === true && this.props.visible === false) {\n      this.reset()\n    }\n  }\n\n  handleLayoutChange = ({ nativeEvent: { layout } }: LayoutChangeEvent) => {\n    this.layout = layout\n  }\n\n  measure(): Promise<Layout> {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve) => {\n      const setLayout = () => {\n        if (this.layout && this.layout.width !== 0) {\n          resolve(this.layout)\n        } else {\n          requestAnimationFrame(setLayout)\n        }\n      }\n      setLayout()\n    })\n  }\n\n  async _animateMove(\n    obj: Move = {\n      top: 0,\n      left: 0,\n      width: 0,\n      height: 0,\n    },\n  ) {\n    const layout = await this.measure()\n    if (!this.props.androidStatusBarVisible && Platform.OS === 'android') {\n      obj.top -= StatusBar.currentHeight || 30\n    }\n\n    const center = {\n      x: obj.left! + obj.width! / 2,\n      y: obj.top! + obj.height! / 2,\n    }\n\n    const relativeToLeft = center.x\n    const relativeToTop = center.y\n    const relativeToBottom = Math.abs(center.y - layout.height!)\n    const relativeToRight = Math.abs(center.x - layout.width!)\n\n    const verticalPosition = relativeToBottom > relativeToTop ? 'bottom' : 'top'\n    const horizontalPosition =\n      relativeToLeft > relativeToRight ? 'left' : 'right'\n\n    const tooltip = {\n      top: 0,\n      tooltip: 0,\n      bottom: 0,\n      right: 0,\n      maxWidth: 0,\n      left: 0,\n    }\n\n    if (verticalPosition === 'bottom') {\n      tooltip.top = obj.top + obj.height + MARGIN\n    } else {\n      tooltip.bottom = layout.height! - (obj.top - MARGIN)\n    }\n\n    if (horizontalPosition === 'left') {\n      tooltip.right = Math.max(layout.width! - (obj.left + obj.width), 0)\n      tooltip.right =\n        tooltip.right === 0 ? tooltip.right + MARGIN : tooltip.right\n      tooltip.maxWidth = layout.width! - tooltip.right - MARGIN\n    } else {\n      tooltip.left = Math.max(obj.left, 0)\n      tooltip.left = tooltip.left === 0 ? tooltip.left + MARGIN : tooltip.left\n      tooltip.maxWidth = layout.width! - tooltip.left - MARGIN\n    }\n\n    const duration = this.props.animationDuration! + 200\n    const toValue =\n      verticalPosition === 'bottom'\n        ? tooltip.top\n        : obj.top -\n          MARGIN -\n          135 -\n          (this.props.currentStep!.tooltipBottomOffset || 0)\n    const translateAnim = Animated.timing(this.state.tooltipTranslateY, {\n      toValue,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    const opacityAnim = Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration,\n      easing: this.props.easing,\n      delay: duration,\n      useNativeDriver: true,\n    })\n    this.state.opacity.setValue(0)\n    if (\n      // @ts-ignore\n      toValue !== this.state.tooltipTranslateY._value &&\n      !this.props.currentStep?.keepTooltipPosition\n    ) {\n      Animated.parallel([translateAnim, opacityAnim]).start()\n    } else {\n      opacityAnim.start()\n    }\n\n    this.setState({\n      tooltip,\n      layout,\n      size: {\n        x: obj.width,\n        y: obj.height,\n      },\n      position: {\n        x: Math.floor(Math.max(obj.left, 0)),\n        y: Math.floor(Math.max(obj.top, 0)),\n      },\n    })\n  }\n\n  animateMove(obj = {}): Promise<void> {\n    return new Promise((resolve) => {\n      this.setState({ containerVisible: true }, () =>\n        this._animateMove(obj as any).then(resolve),\n      )\n    })\n  }\n\n  reset() {\n    this.setState({\n      containerVisible: false,\n      layout: undefined,\n    })\n  }\n\n  handleNext = () => {\n    this.props.next()\n  }\n\n  handlePrev = () => {\n    this.props.prev()\n  }\n\n  handleStop = () => {\n    this.reset()\n    this.props.stop()\n  }\n\n  renderMask = () => (\n    <SvgMask\n      style={styles.overlayContainer}\n      size={this.state.size!}\n      position={this.state.position!}\n      easing={this.props.easing}\n      animationDuration={this.props.animationDuration}\n      backdropColor={this.props.backdropColor}\n      currentStep={this.props.currentStep}\n      maskOffset={this.props.maskOffset}\n      borderRadius={this.props.borderRadius}\n      dismissOnPress={this.props.dismissOnPress}\n    />\n  )\n\n  renderTooltip() {\n    const { tooltipComponent: TooltipComponent, visible } = this.props\n\n    if (!visible) {\n      return null\n    }\n\n    const { opacity } = this.state\n    return (\n      <Animated.View\n        pointerEvents='box-none'\n        key='tooltip'\n        style={[\n          styles.tooltip,\n          this.props.tooltipStyle,\n          {\n            opacity,\n            transform: [{ translateY: this.state.tooltipTranslateY }],\n          },\n        ]}\n      >\n        <TooltipComponent\n          isFirstStep={this.props.isFirstStep}\n          isLastStep={this.props.isLastStep}\n          currentStep={this.props.currentStep!}\n          handleNext={this.handleNext}\n          handlePrev={this.handlePrev}\n          handleStop={this.handleStop}\n          labels={this.props.labels}\n        />\n      </Animated.View>\n    )\n  }\n\n  render() {\n    const containerVisible = this.state.containerVisible || this.props.visible\n    const contentVisible = this.state.layout && containerVisible\n    if (!containerVisible) {\n      return null\n    }\n    return (\n      <View\n        style={[StyleSheet.absoluteFill, { backgroundColor: 'transparent' }]}\n        pointerEvents='box-none'\n      >\n        <View\n          style={styles.container}\n          onLayout={this.handleLayoutChange}\n          pointerEvents='box-none'\n        >\n          {contentVisible && (\n            <>\n              {this.renderMask()}\n              {this.renderTooltip()}\n            </>\n          )}\n        </View>\n      </View>\n    )\n  }\n}\n","import mitt from 'mitt'\nimport * as React from 'react'\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native'\nimport { TourGuideContext } from '../components/TourGuideContext'\nimport { useIsMounted } from '../hooks/useIsMounted'\nimport { IStep, Labels, StepObject, Steps } from '../types'\nimport * as utils from '../utilities'\nimport { Modal } from './Modal'\nimport { OFFSET_WIDTH } from './style'\nimport { TooltipProps } from './Tooltip'\n\nconst { useMemo, useEffect, useState, useRef } = React\n\n/*\nThis is the maximum wait time for the steps to be registered before starting the tutorial\nAt 60fps means 2 seconds\n*/\nconst MAX_START_TRIES = 120\n\nexport interface TourGuideProviderProps {\n  tooltipComponent?: React.ComponentType<TooltipProps>\n  tooltipStyle?: StyleProp<ViewStyle>\n  labels?: Labels\n  androidStatusBarVisible?: boolean\n  startAtMount?: boolean\n  backdropColor?: string\n  verticalOffset?: number\n  wrapperStyle?: StyleProp<ViewStyle>\n  maskOffset?: number\n  borderRadius?: number\n  animationDuration?: number\n  children: React.ReactNode\n  dismissOnPress: boolean\n}\n\nexport const TourGuideProvider = ({\n  children,\n  wrapperStyle,\n  labels,\n  tooltipComponent,\n  tooltipStyle,\n  androidStatusBarVisible,\n  backdropColor,\n  animationDuration,\n  maskOffset,\n  borderRadius,\n  verticalOffset,\n  startAtMount = false,\n  dismissOnPress = false,\n}: TourGuideProviderProps) => {\n  const [visible, setVisible] = useState<boolean | undefined>(undefined)\n  const [currentStep, updateCurrentStep] = useState<IStep | undefined>()\n  const [steps, setSteps] = useState<Steps>({})\n  const [canStart, setCanStart] = useState<boolean>(false)\n\n  const startTries = useRef<number>(0)\n  const mounted = useIsMounted()\n\n  const eventEmitter = useMemo(() => new mitt(), [])\n\n  const modal = useRef<any>()\n\n  useEffect(() => {\n    if (mounted && visible === false) {\n      eventEmitter.emit('stop')\n    }\n  }, [visible])\n\n  useEffect(() => {\n    if (visible || currentStep) {\n      moveToCurrentStep()\n    }\n  }, [visible, currentStep])\n\n  useEffect(() => {\n    if (mounted) {\n      if (Object.entries(steps).length > 0) {\n        setCanStart(true)\n        if (startAtMount) {\n          start()\n        }\n      } else {\n        setCanStart(false)\n      }\n    }\n  }, [mounted, steps])\n\n  const moveToCurrentStep = async () => {\n    const size = await currentStep!.target.measure()\n    if (isNaN(size.width) || isNaN(size.height) || isNaN(size.x) || isNaN(size.y)) {\n      return;\n    }\n    await modal.current?.animateMove({\n      width: size.width + OFFSET_WIDTH,\n      height: size.height + OFFSET_WIDTH,\n      left: Math.round(size.x) - OFFSET_WIDTH / 2,\n      top: Math.round(size.y) - OFFSET_WIDTH / 2 + (verticalOffset || 0),\n    })\n  }\n\n  const setCurrentStep = (step?: IStep) =>\n    new Promise<void>((resolve) => {\n      updateCurrentStep(() => {\n        eventEmitter.emit('stepChange', step)\n        resolve()\n        return step\n      })\n    })\n\n  const getNextStep = (step: IStep | undefined = currentStep) =>\n    utils.getNextStep(steps!, step)\n\n  const getPrevStep = (step: IStep | undefined = currentStep) =>\n    utils.getPrevStep(steps!, step)\n\n  const getFirstStep = () => utils.getFirstStep(steps!)\n\n  const getLastStep = () => utils.getLastStep(steps!)\n\n  const isFirstStep = useMemo(() => currentStep === getFirstStep(), [\n    currentStep,\n  ])\n\n  const isLastStep = useMemo(() => currentStep === getLastStep(), [currentStep])\n\n  const next = () => setCurrentStep(getNextStep()!)\n\n  const prev = () => setCurrentStep(getPrevStep()!)\n\n  const stop = () => {\n    setVisible(false)\n    setCurrentStep(undefined)\n  }\n\n  const registerStep = (step: IStep) => {\n    setSteps((previousSteps) => {\n      return {\n        ...previousSteps,\n        [step.name]: step,\n      }\n    })\n  }\n\n  const unregisterStep = (stepName: string) => {\n    if (!mounted) {\n      return\n    }\n    setSteps((previousSteps) => {\n      return Object.entries(previousSteps as StepObject)\n        .filter(([key]) => key !== stepName)\n        .reduce((obj, [key, val]) => Object.assign(obj, { [key]: val }), {})\n    })\n  }\n\n  const getCurrentStep = () => currentStep\n\n  const start = async (fromStep?: number) => {\n    const currentStep = fromStep\n      ? (steps as StepObject)[fromStep]\n      : getFirstStep()\n\n    if (startTries.current > MAX_START_TRIES) {\n      startTries.current = 0\n      return\n    }\n    if (!currentStep) {\n      startTries.current += 1\n      requestAnimationFrame(() => start(fromStep))\n    } else {\n      eventEmitter.emit('start')\n      await setCurrentStep(currentStep!)\n      setVisible(true)\n      startTries.current = 0\n    }\n  }\n\n  return (\n    <View style={[styles.container, wrapperStyle]}>\n      <TourGuideContext.Provider\n        value={{\n          eventEmitter,\n          registerStep,\n          unregisterStep,\n          getCurrentStep,\n          start,\n          stop,\n          canStart,\n        }}\n      >\n        {children}\n        <Modal\n          ref={modal}\n          {...{\n            next,\n            prev,\n            stop,\n            visible,\n            isFirstStep,\n            isLastStep,\n            currentStep,\n            labels,\n            tooltipComponent,\n            tooltipStyle,\n            androidStatusBarVisible,\n            backdropColor,\n            animationDuration,\n            maskOffset,\n            borderRadius,\n            dismissOnPress,\n          }}\n        />\n      </TourGuideContext.Provider>\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n})\n","import * as React from 'react'\n\nexport const useIsMounted = () => {\n  const isMounted = React.useRef(false)\n  React.useEffect(() => {\n    isMounted.current = true\n    return () => {\n      isMounted.current = false\n    }\n  }, [])\n  return isMounted\n}\n","import * as React from 'react'\nimport { TourGuideContext } from '../components/TourGuideContext'\n\nexport const useTourGuideController = () => {\n  const {\n    start,\n    canStart,\n    stop,\n    eventEmitter,\n    getCurrentStep,\n  } = React.useContext(TourGuideContext)\n  return {\n    start,\n    stop,\n    eventEmitter,\n    getCurrentStep,\n    canStart,\n  }\n}\n","import { Ionicons } from '@expo/vector-icons'\nimport * as React from 'react'\nimport {\n  Image,\n  Platform,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from 'react-native'\nimport {\n  TourGuideProvider,\n  TourGuideZone,\n  TourGuideZoneByPosition,\n  useTourGuideController,\n} from './src'\n\nconst uri =\n  'https://pbs.twimg.com/profile_images/1223192265969016833/U8AX9Lfn_400x400.jpg'\n\n// Add <TourGuideProvider/> at the root of you app!\nfunction App() {\n  return (\n    <TourGuideProvider {...{ borderRadius: 16 }}>\n      <AppContent />\n    </TourGuideProvider>\n  )\n}\n\nconst AppContent = () => {\n  const iconProps = { size: 40, color: '#888' }\n\n  // Use Hooks to control!\n  const { start, canStart, stop, eventEmitter } = useTourGuideController()\n\n  React.useEffect(() => {\n    // start at mount\n    if (canStart) {\n      start()\n    }\n  }, [canStart]) // wait until everything is registered\n\n  React.useEffect(() => {\n    eventEmitter.on('start', () => console.log('start'))\n    eventEmitter.on('stop', () => console.log('stop'))\n    eventEmitter.on('stepChange', () => console.log(`stepChange`))\n    return () => eventEmitter.off('*', null)\n  }, [])\n  return (\n    <View style={styles.container}>\n      {/* Use TourGuideZone only to wrap */}\n      <TourGuideZone\n        keepTooltipPosition\n        zone={2}\n        text={'A react-native-copilot remastered! 🎉'}\n        borderRadius={16}\n      >\n        <Text style={styles.title}>\n          {'Welcome to the demo of\\n\"react-native-tourguide\"'}\n        </Text>\n      </TourGuideZone>\n      <View style={styles.middleView}>\n        <TouchableOpacity style={styles.button} onPress={() => start()}>\n          <Text style={styles.buttonText}>START THE TUTORIAL!</Text>\n        </TouchableOpacity>\n\n        <TourGuideZone zone={3} shape={'rectangle_and_keep'}>\n          <TouchableOpacity style={styles.button} onPress={() => start(4)}>\n            <Text style={styles.buttonText}>Step 4</Text>\n          </TouchableOpacity>\n        </TourGuideZone>\n        <TouchableOpacity style={styles.button} onPress={() => start(2)}>\n          <Text style={styles.buttonText}>Step 2</Text>\n        </TouchableOpacity>\n        <TouchableOpacity style={styles.button} onPress={stop}>\n          <Text style={styles.buttonText}>Stop</Text>\n        </TouchableOpacity>\n        <TourGuideZone\n          zone={7}\n          shape='circle'\n          text={'With animated SVG morphing with awesome flubber 🍮💯'}\n        >\n          <Image source={{ uri }} style={styles.profilePhoto} />\n        </TourGuideZone>\n      </View>\n      <View style={styles.row}>\n        <TourGuideZone zone={4} shape={'circle'} tooltipBottomOffset={200}>\n          <Ionicons name='ios-contact' {...iconProps} />\n        </TourGuideZone>\n        <Ionicons name='ios-chatbubbles' {...iconProps} />\n        <Ionicons name='ios-globe' {...iconProps} />\n        <TourGuideZone zone={5}>\n          <Ionicons name='ios-navigate' {...iconProps} />\n        </TourGuideZone>\n        <TourGuideZone zone={6} shape={'circle'}>\n          <Ionicons name='ios-rainy' {...iconProps} />\n        </TourGuideZone>\n      </View>\n      {Platform.OS !== 'web' ? (\n        <TourGuideZoneByPosition\n          zone={1}\n          shape={'rectangle_and_keep'}\n          isTourGuide\n          top={191}\n          left={88}\n          width={64}\n          height={64}\n          borderRadiusObject={{\n            topLeft: 0,\n            bottomRight: 0,\n          }}\n        />\n      ) : null}\n    </View>\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    paddingTop: 40,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: 'center',\n  },\n  profilePhoto: {\n    width: 140,\n    height: 140,\n    borderRadius: 70,\n    marginVertical: 20,\n  },\n  middleView: {\n    flex: 1,\n    alignItems: 'center',\n  },\n  button: {\n    backgroundColor: '#2980b9',\n    paddingVertical: 10,\n    paddingHorizontal: 15,\n    margin: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontSize: 16,\n  },\n  row: {\n    width: '100%',\n    padding: 15,\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  activeSwitchContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginBottom: 20,\n    alignItems: 'center',\n    paddingHorizontal: 40,\n  },\n})\n\nexport default App\n","import { StyleSheet, ViewStyle, TextStyle } from 'react-native'\n\nexport const Z_INDEX: number = 100\nexport const MARGIN: number = 13\nexport const OFFSET_WIDTH: number = 4\n\nexport interface IStyle {\n  container: ViewStyle\n  tooltip: ViewStyle\n  tooltipText: TextStyle\n  tooltipContainer: ViewStyle\n  button: ViewStyle\n  buttonText: TextStyle\n  bottomBar: ViewStyle\n  overlayContainer: ViewStyle\n}\n\nexport default StyleSheet.create<IStyle>({\n  container: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    zIndex: Z_INDEX,\n  },\n  tooltip: {\n    position: 'absolute',\n    paddingHorizontal: 15,\n    overflow: 'hidden',\n    width: '100%',\n    borderRadius: 16,\n    paddingTop: 24,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingBottom: 16,\n  },\n  tooltipText: {\n    textAlign: 'center',\n  },\n  tooltipContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '80%',\n  },\n  button: {\n    padding: 10,\n  },\n  buttonText: {\n    color: '#27ae60',\n  },\n  bottomBar: {\n    marginTop: 10,\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  overlayContainer: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    right: 0,\n  },\n})\n","export { TourGuideZone, TourGuideZoneProps } from './components/TourGuideZone'\nexport { TourGuideProvider, TourGuideProviderProps } from './components/TourGuideProvider'\nexport { TourGuideContext, ITourGuideContext } from './components/TourGuideContext'\nexport { Tooltip, TooltipProps } from './components/Tooltip'\nexport { TourGuideZoneByPosition, TourGuideZoneByPositionProps } from './components/TourGuideZoneByPosition'\nexport { useTourGuideController } from './hooks/useTourGuideController'\nexport * from './types'\n","import * as React from 'react'\nimport { IStep } from '../types'\n\nexport type Handler = (event?: any) => void\nexport interface Emitter {\n  on(type: string, handler: Handler): void\n  off(type: string, handler: Handler): void\n  emit(type: string, event?: any): void\n}\n\nexport interface ITourGuideContext {\n  eventEmitter?: Emitter\n  canStart: boolean\n  registerStep?(step: IStep): void\n  unregisterStep?(stepName: string): void\n  getCurrentStep?(): IStep | undefined\n  start?(fromStep?: number): void\n  stop?(): void\n}\nexport const TourGuideContext = React.createContext<ITourGuideContext>({\n  canStart: false,\n})\n","import * as React from 'react'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { ITourGuideContext } from './TourGuideContext'\n\ndeclare var __TEST__: boolean\n\ninterface Props {\n  name: string\n  text: string\n  order: number\n  active?: boolean\n  shape?: Shape\n  context: ITourGuideContext\n  children?: any\n  maskOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n  borderRadius?: number\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n}\n\nexport class ConnectedStep extends React.Component<Props> {\n  static defaultProps = {\n    active: true,\n  }\n  wrapper: any\n  componentDidMount() {\n    if (this.props.active) {\n      this.register()\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.active !== prevProps.active) {\n      if (this.props.active) {\n        this.register()\n      } else {\n        this.unregister()\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unregister()\n  }\n\n  setNativeProps(obj: any) {\n    this.wrapper.setNativeProps(obj)\n  }\n\n  register() {\n    if (this.props.context && this.props.context.registerStep) {\n      this.props.context.registerStep({\n        target: this,\n        wrapper: this.wrapper,\n        ...this.props,\n      })\n    } else {\n      console.warn('context undefined')\n    }\n  }\n\n  unregister() {\n    if (this.props.context.unregisterStep) {\n      this.props.context.unregisterStep(this.props.name)\n    } else {\n      console.warn('unregisterStep undefined')\n    }\n  }\n\n  measure() {\n    if (typeof __TEST__ !== 'undefined' && __TEST__) {\n      return new Promise((resolve) =>\n        resolve({\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0,\n        }),\n      )\n    }\n\n    return new Promise((resolve, reject) => {\n      const measure = () => {\n        // Wait until the wrapper element appears\n        if (this.wrapper && this.wrapper.measure) {\n          this.wrapper.measure(\n            (\n              _ox: number,\n              _oy: number,\n              width: number,\n              height: number,\n              x: number,\n              y: number,\n            ) =>\n              resolve({\n                x,\n                y,\n                width,\n                height,\n              }),\n            reject,\n          )\n        } else {\n          requestAnimationFrame(measure)\n        }\n      }\n\n      requestAnimationFrame(measure)\n    })\n  }\n\n  render() {\n    const copilot = {\n      ref: (wrapper: any) => {\n        this.wrapper = wrapper\n      },\n      onLayout: () => {}, // Android hack\n    }\n\n    return React.cloneElement(this.props.children, { copilot })\n  }\n}\n","import * as React from 'react'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { ConnectedStep } from './ConnectedStep'\nimport { TourGuideContext } from './TourGuideContext'\n\ninterface Props {\n  name: string\n  order: number\n  text: string\n  shape?: Shape\n  active?: boolean\n  maskOffset?: number\n  borderRadius?: number\n  children: React.ReactNode\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n}\n\nexport const Step = (props: Props) => {\n  const context = React.useContext(TourGuideContext)\n  return <ConnectedStep {...{ ...props, context }} />\n}\n","import * as React from 'react'\nimport { View, StyleProp, ViewStyle } from 'react-native'\n\ninterface WrapperProps {\n  copilot?: any\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n}\nexport const Wrapper = ({ copilot, children, style }: WrapperProps) => (\n  <View style={style} {...copilot}>\n    {children}\n  </View>\n)\n","import * as React from 'react'\nimport { StyleProp, ViewStyle } from 'react-native'\nimport { BorderRadiusObject, Shape } from '../types'\nimport { Step } from './Step'\nimport { Wrapper } from './Wrapper'\n\nexport interface TourGuideZoneProps {\n  zone: number\n  isTourGuide?: boolean\n  text?: string\n  shape?: Shape\n  maskOffset?: number\n  borderRadius?: number\n  children?: React.ReactNode\n  style?: StyleProp<ViewStyle>\n  keepTooltipPosition?: boolean\n  tooltipBottomOffset?: number\n  borderRadiusObject?: BorderRadiusObject\n}\n\nexport const TourGuideZone = ({\n  isTourGuide = true,\n  zone,\n  children,\n  shape,\n  text,\n  maskOffset,\n  borderRadius,\n  style,\n  keepTooltipPosition,\n  tooltipBottomOffset,\n  borderRadiusObject,\n}: TourGuideZoneProps) => {\n  if (!isTourGuide) {\n    return <>{children}</>\n  }\n\n  return (\n    <Step\n      text={text ?? `Zone ${zone}`}\n      order={zone}\n      name={`${zone}`}\n      {...{\n        shape,\n        maskOffset,\n        borderRadius,\n        keepTooltipPosition,\n        tooltipBottomOffset,\n        borderRadiusObject,\n      }}\n    >\n      <Wrapper {...{ style }}>{children}</Wrapper>\n    </Step>\n  )\n}\n","import * as React from 'react'\nimport { View, Text, StyleProp, ViewStyle } from 'react-native'\n\nimport styles from './style'\n\ninterface Props {\n  wrapperStyle?: StyleProp<ViewStyle>\n  style?: StyleProp<ViewStyle>\n  children?: any\n}\n\nexport const Button = ({ wrapperStyle, style, children, ...rest }: Props) => (\n  <View style={[styles.button, wrapperStyle]}>\n    <Text style={[styles.buttonText, style]} testID={'TourGuideButtonText'} {...rest}>\n      {children}\n    </Text>\n  </View>\n)\n","import * as React from 'react'\nimport { View, Text, TouchableOpacity } from 'react-native'\n\nimport { Button } from './Button'\nimport styles from './style'\nimport { IStep, Labels } from '../types'\n\nexport interface TooltipProps {\n  isFirstStep?: boolean\n  isLastStep?: boolean\n  currentStep: IStep\n  labels?: Labels\n  handleNext?(): void\n  handlePrev?(): void\n  handleStop?(): void\n}\n\nexport const Tooltip = ({\n  isFirstStep,\n  isLastStep,\n  handleNext,\n  handlePrev,\n  handleStop,\n  currentStep,\n  labels,\n}: TooltipProps) => (\n  <View\n    style={{\n      borderRadius: 16,\n      paddingTop: 24,\n      alignItems: 'center',\n      justifyContent: 'center',\n      paddingBottom: 16,\n      width: '80%',\n      backgroundColor: '#ffffffef',\n    }}\n  >\n    <View style={styles.tooltipContainer}>\n      <Text testID='stepDescription' style={styles.tooltipText}>\n        {currentStep && currentStep.text}\n      </Text>\n    </View>\n    <View style={[styles.bottomBar]}>\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.skip || 'Skip'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isFirstStep ? (\n        <TouchableOpacity onPress={handlePrev}>\n          <Button>{labels?.previous || 'Previous'}</Button>\n        </TouchableOpacity>\n      ) : null}\n      {!isLastStep ? (\n        <TouchableOpacity onPress={handleNext}>\n          <Button>{labels?.next || 'Next'}</Button>\n        </TouchableOpacity>\n      ) : (\n        <TouchableOpacity onPress={handleStop}>\n          <Button>{labels?.finish || 'Finish'}</Button>\n        </TouchableOpacity>\n      )}\n    </View>\n  </View>\n)\n"],"sourceRoot":""}